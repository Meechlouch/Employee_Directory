{"version":3,"sources":["component/EmployeeTable.js","component/TableHeader.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","name","position","salary","department","onClick","sortByName","className","removeEmployee","id","TableHeader","App","state","employeeList","filter","employee","setState","employees","sort","a","b","this","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoBeA,MAlBf,SAAuBC,GACrB,OACE,gCACE,+BACE,6BAAKA,EAAMC,OACX,6BAAKD,EAAME,WACX,6BAAKF,EAAMG,SACX,6BAAKH,EAAMI,aACX,wBAAQC,QAAS,kBAAML,EAAMM,cAAcC,UAAU,kBAArD,uBAGA,wBAAQF,QAAS,kBAAML,EAAMQ,eAAeR,EAAMS,KAAKF,UAAU,iBAAjE,0B,KCCOG,MAZf,WACE,OACE,gCACE,+BACE,sCACA,0CACA,wCACA,kDCsCOC,E,4MAvCbC,MAAQ,CACNC,gB,EAGFL,eAAiB,SAACC,GAEhB,IAAMI,EAAe,EAAKD,MAAMC,aAAaC,QAAO,SAACC,GAAD,OAAcA,EAASN,KAAOA,KAElF,EAAKO,SAAS,CAAEH,kB,EAGlBP,WAAa,WACX,IAAIW,EAAY,EAAKL,MAAMC,aAAaK,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElB,KAAOmB,EAAEnB,KAAO,GAAK,KAC/E,EAAKe,SAAS,CAAEC,e,4CAGlB,WAAU,IAAD,OACP,OACE,sBAAKV,UAAU,YAAf,UACE,oDACA,wBAAOA,UAAU,sBAAjB,UACE,cAAC,EAAD,IACCc,KAAKT,MAAMC,aAAaS,KAAI,SAACP,GAAD,OAC3B,cAAC,EAAD,CACET,WAAY,EAAKA,WACjBE,eAAgB,EAAKA,eACrBC,GAAIM,EAASN,GACbR,KAAMc,EAASd,KACfC,SAAUa,EAASb,SACnBC,OAAQY,EAASZ,OACjBC,WAAYW,EAASX,0B,GAhCjBmB,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8c597a77.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>{props.name}</td>\r\n        <td>{props.position}</td>\r\n        <td>{props.salary}</td>\r\n        <td>{props.department}</td>\r\n        <button onClick={() => props.sortByName()} className=\"btn btn-warning\">\r\n          SortNames\r\n        </button>\r\n        <button onClick={() => props.removeEmployee(props.id)} className=\"btn btn-danger\">\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n}\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\n\r\nfunction TableHeader() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Position</th>\r\n        <th>Salary</th>\r\n        <th>Department</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\nimport employeeList from \"./employeeList.json\";\nimport EmployeeTable from \"./component/EmployeeTable\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableHeader from \"./component/TableHeader\";\n\nclass App extends Component {\n  // Setting this.state.employees to the employees json array\n  state = {\n    employeeList,\n  };\n\n  removeEmployee = (id) => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const employeeList = this.state.employeeList.filter((employee) => employee.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ employeeList });\n  };\n\n  sortByName = () => {\n    let employees = this.state.employeeList.sort((a, b) => (a.name > b.name ? 1 : -1));\n    this.setState({ employees });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Employee Directory</h1>\n        <table className=\"table table-striped\">\n          <TableHeader />\n          {this.state.employeeList.map((employee) => (\n            <EmployeeTable\n              sortByName={this.sortByName}\n              removeEmployee={this.removeEmployee}\n              id={employee.id}\n              name={employee.name}\n              position={employee.position}\n              salary={employee.salary}\n              department={employee.department}\n            />\n          ))}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}