{"version":3,"sources":["component/EmployeeTable/EmployeeTable.js","component/TableHeader/TableHeader.js","component/SearchForm/SearchForm.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","id","firstName","lastName","email","src","thumbnail","alt","TableHeader","scope","SearchForm","state","fullName","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","className","this","onChange","type","placeholder","onClick","Component","axios","get","then","res","data","results","map","employee","first","last","picture","medium","App","useState","employees","setEmployees","setSortName","setById","useEffect","API","console","log","catch","err","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAeeA,MAbf,SAAuBC,GACrB,OACE,+BACE,6BAAKA,EAAMC,KACX,6BAAKD,EAAME,YACX,6BAAKF,EAAMG,WACX,6BAAKH,EAAMI,QACX,6BACE,qBAAKC,IAAKL,EAAMM,UAAWC,IAAI,kB,KCKxBC,MAbf,WACE,OACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yB,wCCqCOC,G,kNA1CbC,MAAQ,CACNC,SAAU,I,EAGZC,kBAAoB,SAACC,GAAU,MAELA,EAAMC,OAAtBC,EAFqB,EAErBA,KAAMC,EAFe,EAEfA,MAGd,EAAKC,SAAL,eACGF,EAAOC,K,EAIZE,iBAAmB,SAACL,GAElBA,EAAMM,iBAEN,EAAKF,SAAS,CACZN,SAAU,M,4CAId,WAEE,OACE,8BACE,uBAAMS,UAAU,OAAhB,UACE,uBACEJ,MAAOK,KAAKX,MAAMC,SAClBI,KAAK,WACLO,SAAUD,KAAKT,kBACfW,KAAK,OACLC,YAAY,cAEd,wBAAQC,QAASJ,KAAKH,iBAAtB,6B,GArCeQ,c,iBCCV,EACC,WACZ,OAAOC,IAAMC,IAAI,gDAAgDC,MAAK,SAACC,GAErE,OADkBA,EAAIC,KAAKC,QACVC,KAAI,SAACC,GACpB,MAAO,CACLlC,GAAIkC,EAASlC,GAAGgB,MAChBf,UAAWiC,EAASnB,KAAKoB,MACzBjC,SAAUgC,EAASnB,KAAKqB,KACxBjC,MAAO+B,EAAS/B,MAChBkC,QAASH,EAASG,QAAQC,eC+DrBC,MArEf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEmBF,mBAAS,IAF5B,mBAEIG,GAFJ,aAGaH,mBAAS,IAHtB,mBAGEI,GAHF,WAiCb,OA5BAC,qBAAU,WAKRC,IACGjB,MAAK,SAACY,GACLM,QAAQC,IAAIP,GACZC,EAAaD,MAEdQ,OAAM,SAACC,GACNH,QAAQC,IAAIE,QATf,IA2BD,sBAAK9B,UAAU,YAAf,UACE,oDACA,cAAC,EAAD,IAEE,wBAAQK,QAAS,kBAAMmB,EAAQH,EAAUU,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpD,GAAKqD,EAAErD,GAAK,GAAK,OAAMoB,UAAU,kBAA5F,oBAKA,wBACEK,QAAS,kBAAMkB,EAAYF,EAAUU,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEnD,UAAYoD,EAAEpD,UAAY,GAAK,OACtFmB,UAAU,kBAFZ,yBAOF,wBAAOA,UAAU,sBAAjB,UACE,cAAC,EAAD,IACA,gCACGqB,EAAUR,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAEElC,GAAIkC,EAASlC,GACbC,UAAWiC,EAASjC,UACpBC,SAAUgC,EAAShC,SACnBC,MAAO+B,EAAS/B,MAChBE,UAAW6B,EAASG,SALfH,EAASlC,gBCnDbsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e5273ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.id}</td>\r\n      <td>{props.firstName}</td>\r\n      <td>{props.lastName}</td>\r\n      <td>{props.email}</td>\r\n      <td>\r\n        <img src={props.thumbnail} alt=\"profile\"></img>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\n\r\nfunction TableHeader() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">ID#</th>\r\n        <th scope=\"col\">First</th>\r\n        <th scope=\"col\">Last</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Photo</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass SearchForm extends Component {\r\n  // Setting the component's initial state\r\n  state = {\r\n    fullName: \"\",\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    // Getting the value and name of the input which triggered the change\r\n    const { name, value } = event.target;\r\n\r\n    // Updating the input's state\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    // Preventing the default behavior of the form submit (which is to refresh the page)\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      fullName: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Notice how each input has a `value`, `name`, and `onChange` prop\r\n    return (\r\n      <div>\r\n        <form className=\"form\">\r\n          <input\r\n            value={this.state.fullName}\r\n            name=\"fullName\"\r\n            onChange={this.handleInputChange}\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n          />\r\n          <button onClick={this.handleFormSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the random user API\r\n// eslint-disable-next-line\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\").then((res) => {\r\n      const employees = res.data.results;\r\n      return employees.map((employee) => {\r\n        return {\r\n          id: employee.id.value,\r\n          firstName: employee.name.first,\r\n          lastName: employee.name.last,\r\n          email: employee.email,\r\n          picture: employee.picture.medium,\r\n        };\r\n      });\r\n    });\r\n  },\r\n};\r\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeTable from \"./component/EmployeeTable/EmployeeTable.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableHeader from \"./component/TableHeader/TableHeader.js\";\nimport SearchForm from \"./component/SearchForm/SearchForm.js\";\nimport API from \"./utils/API\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [sortName, setSortName] = useState([]);\n  const [sortId, setById] = useState([]);\n\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  function loadEmployees() {\n    API.getEmployees()\n      .then((employees) => {\n        console.log(employees);\n        setEmployees(employees);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // removeEmployee(id) {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   return employees.filter((employee) => employee.id !== id);\n  // }\n\n  // function sortByName() {\n  //   return employees.sort((a, b) => (a.name > b.name ? 1 : -1));\n  // }\n\n  // function sortById() {\n  //   return employees.sort((a, b) => (a.id > b.id ? 1 : -1));\n  // }\n\n  return (\n    <div className=\"container\">\n      <h1>Employee Directory</h1>\n      <SearchForm />\n      {\n        <button onClick={() => setById(employees.sort((a, b) => (a.id > b.id ? 1 : -1)))} className=\"btn btn-success\">\n          SortId\n        </button>\n      }\n      {\n        <button\n          onClick={() => setSortName(employees.sort((a, b) => (a.firstName > b.firstName ? 1 : -1)))}\n          className=\"btn btn-warning\"\n        >\n          Order Names\n        </button>\n      }\n      <table className=\"table table-striped\">\n        <TableHeader />\n        <tbody>\n          {employees.map((employee) => (\n            <EmployeeTable\n              key={employee.id}\n              id={employee.id}\n              firstName={employee.firstName}\n              lastName={employee.lastName}\n              email={employee.email}\n              thumbnail={employee.picture}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}