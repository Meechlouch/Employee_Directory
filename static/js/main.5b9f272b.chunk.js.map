{"version":3,"sources":["component/EmployeeTable/EmployeeTable.js","component/TableHeader/TableHeader.js","component/SearchForm/SearchForm.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","id","firstName","lastName","email","src","thumbnail","alt","onClick","removeEmployee","className","TableHeader","scope","SearchForm","useState","state","setState","name","onChange","event","target","value","console","log","lowerCase","toLowerCase","newArr","employees","filter","employee","indexOf","empFilter","handleInputChange","type","placeholder","axios","get","then","res","data","results","map","first","last","picture","medium","App","setEmployees","setFilter","setRemoveEmp","useEffect","API","allEmployees","catch","err","empRemoved","tempIds","sort","a","b","tempEmp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b9f272b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.id}</td>\r\n      <td>{props.firstName}</td>\r\n      <td>{props.lastName}</td>\r\n      <td>{props.email}</td>\r\n      <td>\r\n        <img src={props.thumbnail} alt=\"profile\"></img>\r\n      </td>\r\n      <button onClick={() => props.removeEmployee(props.id)} className=\"btn btn-danger\">\r\n        Delete\r\n      </button>\r\n    </tr>\r\n  );\r\n}\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\n\r\nfunction TableHeader() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">ID#</th>\r\n        <th scope=\"col\">First</th>\r\n        <th scope=\"col\">Last</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Photo</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\nexport default TableHeader;\r\n","import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchForm(props) {\r\n  const [state, setState] = useState();\r\n\r\n  const handleInputChange = (event) => {\r\n    setState(event.target.value);\r\n    console.log(state);\r\n    let lowerCase = event.target.value.toLowerCase();\r\n    console.log(lowerCase);\r\n    let newArr = props.employees.filter((employee) => employee.firstName.toLowerCase().indexOf(lowerCase) !== -1);\r\n    console.log(newArr);\r\n    props.empFilter(newArr);\r\n  };\r\n\r\n  // Notice how each input has a `value`, `name`, and `onChange` prop\r\n  return (\r\n    <div>\r\n      <form className=\"form\">\r\n        <input name=\"fullName\" onChange={(event) => handleInputChange(event)} type=\"text\" placeholder=\"Full Name\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the random user API\r\n// eslint-disable-next-line\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us\").then((res) => {\r\n      const employees = res.data.results;\r\n      return employees.map((employee) => {\r\n        return {\r\n          id: employee.id.value,\r\n          firstName: employee.name.first,\r\n          lastName: employee.name.last,\r\n          email: employee.email,\r\n          picture: employee.picture.medium,\r\n        };\r\n      });\r\n    });\r\n  },\r\n};\r\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeTable from \"./component/EmployeeTable/EmployeeTable.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TableHeader from \"./component/TableHeader/TableHeader.js\";\nimport SearchForm from \"./component/SearchForm/SearchForm.js\";\nimport API from \"./utils/API\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [filter, setFilter] = useState([]);\n  // const [s, setSortName] = useState([]);\n  // const [, setById] = useState([]);\n  const [removeEmp, setRemoveEmp] = useState([]);\n\n  useEffect(() => {\n    loadEmployees();\n  }, []);\n\n  function loadEmployees() {\n    API.getEmployees()\n      .then((allEmployees) => {\n        setEmployees(allEmployees);\n        setFilter(allEmployees);\n        setRemoveEmp(allEmployees);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const removeEmployee = (id) => {\n    console.log(`This is the ${id}`);\n    console.log(employees.filter((employee) => employee.id !== id));\n    const empRemoved = employees.filter((employee) => employee.id !== id);\n    setRemoveEmp(empRemoved);\n  };\n\n  const sortNames = () => {\n    let tempEmp = [...filter];\n    tempEmp.sort((a, b) => (a.firstName > b.firstName ? 1 : -1));\n    console.log(tempEmp);\n    setFilter(tempEmp);\n  };\n\n  const sortById = () => {\n    let tempIds = [...filter];\n    tempIds.sort((a, b) => (a.id > b.id ? 1 : -1));\n    console.log(tempIds);\n    setFilter(tempIds);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Employee Directory</h1>\n      <SearchForm employees={employees} empFilter={setFilter} />\n      <button onClick={sortById} className=\"btn btn-success\">\n        SortId\n      </button>\n\n      <button onClick={sortNames} className=\"btn btn-warning\">\n        Order Names\n      </button>\n\n      <table className=\"table table-striped\">\n        <TableHeader />\n        <tbody>\n          {filter.map((employee) => (\n            <EmployeeTable\n              removeEmployee={removeEmployee}\n              key={employee.id}\n              id={employee.id}\n              firstName={employee.firstName}\n              lastName={employee.lastName}\n              email={employee.email}\n              thumbnail={employee.picture}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}